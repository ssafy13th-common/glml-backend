spring:
  datasource:
    url: jdbc:mysql://${MYSQL_HOSTNAME}:${MYSQL_PORT}/${MYSQL_DB_NAME}?useSSL=false&useUnicode=true&allowPublicKeyRetrieval=true&rewriteBatchedStatements=true
    driver-class-name: com.mysql.cj.jdbc.Driver
    username: ${MYSQL_USERNAME}
    password: ${MYSQL_PASSWORD}
  data:
    mongodb:
      host: ${MONGODB_HOST}
      port: ${MONGODB_PORT}
      database: ${MONGODB_DB_NAME}
      username: ${MONGODB_USERNAME}
      password: ${MONGODB_PASSWORD}
    redis:
      host: ${REDIS_HOST}
      port: ${REDIS_PORT}
      password: ${REDIS_PASSWORD}
  cloud:
    aws:
      region:
        static: ${AWS_REGION}
      credentials:
        access-key: ${AWS_ACCESS_KEY}
        secret-key: ${AWS_REFRESH_KEY}
      s3:
        bucket: ${AWS_S3_BUCKET}
  security:
    oauth2:
      client:
        registration:
          kakao:
            client-id: ${KAKAO_CLIENT_ID}
            client-secret: ${KAKAO_CLIENT_SECRET}
            redirect-uri: ${KAKAO_REDIRECT_URI}
            authorization-grant-type: authorization_code
            scope: profile_nickname, profile_image, account_email
            client-name: Kakao
            client-authentication-method: client_secret_post
        provider:
          kakao:
            authorization-uri: ${KAKAO_AUTHORIZATION_URI}
            token-uri: ${KAKAO_TOKEN_URI}
            user-info-uri: ${KAKAO_USER_INFO_URI}
            user-name-attribute: id
  mail:
    host: ${MAIL_HOST}
    port: ${MAIL_PORT}
    username: ${MAIL_USERNAME}
    password: ${MAIL_PASSWORD}
    properties:
      mail.smtp.auth: true
      mail.smtp.starttls.enable: true

jwt:
  secretKey: ${JWT_SECRET_KEY}
  access:
    expiration: ${JWT_ACCESS_EXPIRATION}
    header: Authorization

  refresh:
    expiration: ${JWT_REFRESH_EXPIRATION}
    header: Authorization-refresh

app:
  live-location:
    ttl-millis: ${LIVE_LOCATION_EXPIRATION}

ocr:
  downstream:
    flask-base-url: ${FLASK_BASE_URL}
    flask-internal-token: ${FLASK_INTERNAL_TOKEN}

coolsms:
  apiKey: ${COOLSMS_API_KEY}
  apiSecret: ${COOLSMS_API_SECRET}
  fromNumber: ${COOLSMS_FROM_NUMBER}
  limitTime: ${COOLSMS_LIMIT_TIME}
  limitRequestTime: ${COOLSMS_LIMIT_REQUEST_TIME}
  limitRequestCnt: ${COOLSMS_LIMIT_REQUEST_CNT}