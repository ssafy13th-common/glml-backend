plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.4'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.ssafy'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // query dsl
    implementation 'io.github.openfeign.querydsl:querydsl-jpa:6.10.1'
    annotationProcessor 'io.github.openfeign.querydsl:querydsl-apt:6.10.1:jpa'
    annotationProcessor 'jakarta.persistence:jakarta.persistence-api:3.1.0'
    annotationProcessor 'jakarta.annotation:jakarta.annotation-api:3.0.0'

    //security
    implementation 'org.springframework.boot:spring-boot-starter-security:3.5.3'

    //oauth2
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client:3.5.3'

    //jjwt
    implementation 'io.jsonwebtoken:jjwt-api:0.12.6'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.6'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.6'

    //redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis:3.5.2'

    //mysql
    runtimeOnly 'com.mysql:mysql-connector-j'

    // mongodb
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb:3.5.3'

    //aws
    implementation 'io.awspring.cloud:spring-cloud-aws-starter:3.3.0'

    //s3
    implementation 'io.awspring.cloud:spring-cloud-aws-starter-s3:3.3.0'

    //websocket
    implementation 'org.springframework.boot:spring-boot-starter-websocket:3.5.3'

    //jackson
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.19.0'

    //lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.projectlombok:lombok:1.18.28'

    //h2
    runtimeOnly 'com.h2database:h2'
    testRuntimeOnly 'com.h2database:h2'

    //test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    testImplementation 'org.springframework.security:spring-security-test:6.5.1'

    //websocket
    implementation 'org.springframework.boot:spring-boot-starter-websocket:3.5.0'

    //mongoDB
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb:3.5.3'

    //messaging
    implementation 'org.springframework.security:spring-security-messaging'

    //mail
    implementation 'org.springframework.boot:spring-boot-starter-mail'

    //sms authentication
    implementation 'net.nurigo:sdk:4.3.0'

    //swagger
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.6'
}

sourceSets {
    main {
        java {
            srcDir "build/generated/sources/annotationProcessor/java/main"
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.generatedSourceOutputDirectory = file("build/generated/sources/annotationProcessor/java/main")
}

tasks.named('test') {
    useJUnitPlatform()
}